// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int              @id @default(autoincrement())
  fullName         String
  email            String           @unique
  password         String
  phone            String?
  isEmailVerified  Boolean          @default(false)
  roles            String[]         @default([])
  createdAt        DateTime         @default(now()) @db.Timestamptz
  updatedAt        DateTime         @updatedAt @db.Timestamptz

  // Relations
  refreshTokens    RefreshToken[]
  verificationTokens VerificationToken[]

  @@map("users")
}

/// Stores hashed refresh tokens for rotation & revocation
model RefreshToken {
  id        Int      @id @default(autoincrement())
  tokenHash String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
  revoked   Boolean  @default(false)
  createdAt DateTime @default(now()) @db.Timestamptz

  @@index([userId])
  @@map("refresh_tokens")
}

/// For email verification and password reset flows
model VerificationToken {
  id        Int      @id @default(autoincrement())
  tokenHash String
  type      String   // "email_verification" | "password_reset"
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now()) @db.Timestamptz

  @@index([userId])
  @@map("verification_tokens")
}

model Todo {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("todos")
}